{"version":3,"sources":["webpack:///./app/scripts/packs/graphic.js","webpack:///./node_modules/d3-tip/index.js","webpack:///./app/scripts/packs/mindmap.js","webpack:///./app/scripts/kickstart.js","webpack:///./config/polyfills/classlist.js","webpack:///./config/legacy-polyfills.js","webpack:///../src/vnode.js","webpack:///../src/options.js","webpack:///../src/h.js","webpack:///../src/util.js","webpack:///../src/constants.js","webpack:///../src/render-queue.js","webpack:///../src/vdom/index.js","webpack:///../src/dom/index.js","webpack:///../src/vdom/diff.js","webpack:///../src/vdom/component.js","webpack:///../src/vdom/component-recycler.js","webpack:///../src/component.js"],"names":["container","d3","data","resize","html","node","offsetWidth","mapboxgl","accessToken","map","Map","style","center","zoom","scrollZoom","disable","doubleClickZoom","touchZoomRotate","dragRotate","dragPan","touchPitch","getCanvasContainer","tooltip","direction","offset","rootElement","document","body","initNode","svg","point","target","tip","vis","svgNode","tagName","toLowerCase","ownerSVGElement","createSVGPoint","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","coords","content","apply","this","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","classed","directionCallbacks","get","top","left","hide","attr","n","v","selection","functor","destroy","remove","bbox","getScreenBBox","y","offsetHeight","x","s","e","w","nw","ne","sw","se","keys","div","select","createElement","targetShape","targetel","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform","d3Tip","d","append","transform","lon","lat","project","LngLat","stream","path","projection","featureElement","selectAll","geodata","features","enter","featureElement2","geodata_2","rectBpp","bppRect","rectMahakam","mahakamRect","button","text","update","on","window","addEventListener","_","debounce","ttData","relatedContentContainer","getElementById","gutenTag","then","RelatedContent","default","render","title","ribbonContainer","Ribbon","AdLoader","init","self","createElementNS","view","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","replace","arrIndexOf","indexOf","item","len","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","classList","token","test","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","contains","add","tokens","l","updated","index","splice","toggle","force","result","method","replacement_token","join","defineProperty","classListPropDesc","enumerable","configurable","ex","undefined","number","__defineGetter__","testElement","createMethod","original","DOMTokenList","_toggle","Promise","require","assign","VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","child","simple","p","extend","obj","props","applyRef","ref","value","defer","SYNC_RENDER","IS_NON_DIMENSIONAL","items","isSameNodeType","_componentConstructor","isNamedNode","normalizedNodeName","removeNode","old","useCapture","_listeners","ns","mounts","diffLevel","hydrating","flushMounts","c","ret","dom","prevSvgMode","vnode","previousProps","component","_renderCallbacks","isChild","originalComponent","oldDom","isOwner","createComponent","ATTR_KEY","out","buildComponentFromVNode","vnodeName","firstChild","nodeValue","vchildren","min","originalChildren","childrenLen","vlen","j","f","vchild","key","keyedLen","keyed","next","previousSibling","attrs","unmountOnly","recyclerComponents","Ctor","nextBase","setComponentProps","componentWillReceiveProps","context","prevContext","_disable","renderMode","syncComponentUpdates","state","isUpdate","initialBase","snapshot","rendered","inst","cbase","FORCE_RENDER","prevProps","childComponent","base","childProps","initialChildComponent","diff","baseParent","replaceChild","_component","toUnmount","componentRef","t","beforeUnmount","callback"],"mappings":"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","file":"main.37c846a0ac.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\n\n// import * as tip from 'd3-tip';\nimport _ from 'lodash';\n\n// main code for feature graphics\n// a reference to the default graphic container, change if needed\nconst container = d3.select('#map');\n\n// a helper function to clear the container of its contents\nconst clearContainer = () => container.html('');\n\n// a helper function to grab the container's width\nconst getFrameWidth = () => container.node().offsetWidth;\n\nimport data from '../../../data/data.json';\nimport geodata from '../../../data/mahakam_clipped.json';\nimport geodata_2 from '../../../data/telukbppnew.json';\nimport bppRect from '../../../data/rectbpp.json';\nimport mahakamRect from '../../../data/rectmahakam.json';\n\nlet pesutBpp = data['pesut_bpp'];\nlet buttonBpp = data['button_bpp'];\n\nfunction resize() {\n  // code executed on window resize\n  clearContainer();\n  const frameWidth = getFrameWidth();\n  var breakPoint = 400;\n  const isMobile = frameWidth < breakPoint;\n\n  mapboxgl.accessToken =\n    'pk.eyJ1Ijoic3RlcGhhZGVsaW5lIiwiYSI6ImNrY2U4a3Q0cDA1dXUzN281ZzRuanB0MmIifQ.KshV869EVdqe2C-Ifyb9qg';\n  var map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/stephadeline/ckcu5qf303gy41ipoynhc8pk1/draft', // stylesheet location\n    center: [116.7, -0.8], // starting position [lng, lat]\n    zoom: 8, // starting zoom\n  });\n  map.scrollZoom.disable();\n  map.doubleClickZoom.disable();\n  map.touchZoomRotate.disable();\n  map.dragRotate.disable();\n  map.dragPan.disable();\n  map.touchPitch.disable();\n\n  var margin = { top: 20, right: 10, bottom: 20, left: 40 };\n  var width = frameWidth - margin.left - margin.right;\n  var height = 350 - margin.top - margin.bottom;\n\n  var mapContainer = map.getCanvasContainer();\n  var container = map.getCanvasContainer();\n\n  var tooltip = d3Tip()\n    .attr('class', 'd3-tip')\n    .html(function(d) {\n      return 'this is a test';\n    });\n\n  var svg = d3\n    .select(container)\n    .append('svg')\n    .attr('width', '70%')\n    .attr('height', '550')\n    .style('position', 'absolute')\n    .style('z-index', 2);\n\n  svg.call(tooltip);\n\n  function project(d) {\n    return map.project(new mapboxgl.LngLat(d['LONG'], d['LAT']));\n  }\n  //change LAT and LONG to whatever the lat long fields are\n\n  // var dots = svg\n  //   .selectAll('.circles')\n  //   .data(pesutBpp)\n  //   .enter()\n  //   .append('circle')\n  //   .attr('class', 'circles')\n  //   .attr('r', 3)\n  //   .style('fill', '000000')\n  //   .attr('cx', function(d) {\n  //     return project(d).x;\n  //   })\n  //   .attr('cy', function(d) {\n  //     return project(d).y;\n  //   });\n\n  var transform = d3.geoTransform({ point: projectPoint });\n  var path = d3.geoPath().projection(transform);\n\n  var featureElement = svg\n    .selectAll('.mahakam-path')\n    .data(geodata.features)\n    .enter()\n    .append('path')\n    .attr('class', 'mahakam-path')\n    .attr('stroke', '#53a7b9')\n    .attr('stroke-width', '3px')\n    .attr('fill', '#53a7b9')\n    .attr('fill-opacity', '70%');\n\n  var featureElement2 = svg\n    .selectAll('.bpp-path')\n    .data(geodata_2.features)\n    .enter()\n    .append('path')\n    .attr('class', 'bpp-path')\n    // .attr('stroke', '#666666')\n    .attr('fill', '#53a7b9')\n    .attr('fill-opacity', '70%');\n\n  var rectBpp = svg\n    .selectAll('#bpp-rect')\n    .data(bppRect.features)\n    .enter()\n    .append('path')\n    .attr('id', 'bpp-rect')\n    .attr('class', 'rectangle')\n    .attr('stroke', '#999999')\n    .attr('stroke-width', '2px')\n    .attr('stroke-opacity', '30%')\n    .attr('fill-opacity', '0%');\n\n  var rectMahakam = svg\n    .selectAll('#mahakam-rect')\n    .data(mahakamRect.features)\n    .enter()\n    .append('path')\n    .attr('id', 'mahakam-rect')\n    .attr('class', 'rectangle')\n    .attr('stroke', '#999999')\n    .attr('stroke-width', '2px')\n    .attr('stroke-opacity', '30%')\n    .attr('fill-opacity', '0%');\n\n  var button = svg\n    .append('text')\n    .text('hello world')\n    .attr('opacity', '0%');\n\n  var showTip = function() {\n    button.attr('opacity', '100%');\n  };\n\n  svg.selectAll('.rectangle').on('click', showTip);\n\n  // var tooltip = d3\n  //   .select('.rectangle')\n  //   .append('div')\n  //   .attr('id', 'state-tooltip')\n  //   .style('position', 'absolute')\n  //   .style('z-index', '10')\n  //   .style('visibility', 'hidden')\n  //   .style('background', '#fff')\n  //   .text('testtooltip');\n\n  // var mainTooltipLabel = tooltip.append('div').attr('class', 'label main');\n\n  // tooltip.on('mouseover', function(d) {\n  //   // Don't do tooltips on mobile.\n  //   if (isMobile) {\n  //     return;\n  //   }\n  //   tooltip.style('visibility', 'visible');\n  // });\n\n  // var div = d3\n  //   .select('container')\n  //   .append('div')\n  //   .attr('class', 'tooltip')\n  //   .style('opacity', 0);\n\n  // var tooltip = d3.select('.rectangle').on('mouseover', function(d) {\n  //   // Don't do tooltips on mobile.\n  //   if (isMobile) {\n  //     return;\n  //   }\n  //   div\n  //     .transition()\n  //     .duration(200)\n  //     .style('opacity', 0.9);\n  //   div.html('<p>test</p>');\n  // });\n\n  function update() {\n    featureElement.attr('d', path);\n    featureElement2.attr('d', path);\n    rectBpp.attr('d', path);\n    rectMahakam.attr('d', path);\n  }\n\n  // svg\n  //   .selectAll('path.rectangle')\n  //   .on('mouseover', tooltip.show)\n  //   .on('mouseout', tooltip.hide);\n\n  map.on('viewreset', update);\n  map.on('movestart', function() {\n    svg.classed('hidden', true);\n  });\n  map.on('rotate', function() {\n    svg.classed('hidden', true);\n  });\n  map.on('moveend', function() {\n    update();\n    svg.classed('hidden', false);\n  });\n\n  update();\n\n  function projectPoint(lon, lat) {\n    var point = map.project(new mapboxgl.LngLat(lon, lat));\n    this.stream.point(point.x, point.y);\n  }\n\n  // var geopath = svg\n  //   .selectAll('path')\n  //   .data(geodata)\n  //   .enter()\n  //   .append('path')\n  //   .attr('d', d3.geo.path());\n  // var button = svg\n  //   .selectAll('.circle2')\n  //   .data(buttonBpp)\n  //   .enter()\n  //   .append('circle')\n  //   .attr('class', 'circle2')\n  //   .attr('r', 20)\n  //   .style('fill', 'red')\n  //   .attr('cx', function(d) {\n  //     return project(d).x;\n  //   })\n  //   .attr('cy', function(d) {\n  //     return project(d).y;\n  //   });\n\n  // pass the recalculated frameWidth to parts of your chart (like an axis) that change with resize!\n}\n\n// call resize on load\nresize();\nwindow.addEventListener('resize', _.debounce(resize, 200));\n","/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection'\nimport { selection, select } from 'd3-selection'\n// Public - constructs a new tooltip\n//\n// Returns a tip\nexport default function() {\n  var direction   = d3TipDirection,\n      offset      = d3TipOffset,\n      html        = d3TipHTML,\n      rootElement = document.body,\n      node        = initNode(),\n      svg         = null,\n      point       = null,\n      target      = null\n\n  function tip(vis) {\n    svg = getSVGNode(vis)\n    if (!svg) return\n    point = svg.createSVGPoint()\n    rootElement.appendChild(node)\n  }\n\n  // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n  tip.show = function() {\n    var args = Array.prototype.slice.call(arguments)\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir     = direction.apply(this, args),\n        nodel   = getNodeEl(),\n        i       = directions.length,\n        coords,\n        scrollTop  = document.documentElement.scrollTop ||\n      rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft ||\n      rootElement.scrollLeft\n\n    nodel.html(content)\n      .style('opacity', 1).style('pointer-events', 'all')\n\n    while (i--) nodel.classed(directions[i], false)\n    coords = directionCallbacks.get(dir).apply(this)\n    nodel.classed(dir, true)\n      .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n      .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n\n    return tip\n  }\n\n  // Public - hide the tooltip\n  //\n  // Returns a tip\n  tip.hide = function() {\n    var nodel = getNodeEl()\n    nodel.style('opacity', 0).style('pointer-events', 'none')\n    return tip\n  }\n\n  // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n  tip.attr = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n)\n    }\n\n    var args =  Array.prototype.slice.call(arguments)\n    selection.prototype.attr.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n  tip.style = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n)\n    }\n\n    var args = Array.prototype.slice.call(arguments)\n    selection.prototype.style.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n  tip.direction = function(v) {\n    if (!arguments.length) return direction\n    direction = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n  tip.offset = function(v) {\n    if (!arguments.length) return offset\n    offset = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n  tip.html = function(v) {\n    if (!arguments.length) return html\n    html = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n  tip.rootElement = function(v) {\n    if (!arguments.length) return rootElement\n    rootElement = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n  tip.destroy = function() {\n    if (node) {\n      getNodeEl().remove()\n      node = null\n    }\n    return tip\n  }\n\n  function d3TipDirection() { return 'n' }\n  function d3TipOffset() { return [0, 0] }\n  function d3TipHTML() { return ' ' }\n\n  var directionCallbacks = map({\n        n:  directionNorth,\n        s:  directionSouth,\n        e:  directionEast,\n        w:  directionWest,\n        nw: directionNorthWest,\n        ne: directionNorthEast,\n        sw: directionSouthWest,\n        se: directionSouthEast\n      }),\n      directions = directionCallbacks.keys()\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    }\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    }\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    }\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.se.y,\n      left: bbox.se.x\n    }\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'))\n    div\n      .style('position', 'absolute')\n      .style('top', 0)\n      .style('opacity', 0)\n      .style('pointer-events', 'none')\n      .style('box-sizing', 'border-box')\n\n    return div.node()\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node()\n    if (!svgNode) return null\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n    return svgNode.ownerSVGElement\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode()\n      // re-add node to DOM\n      rootElement.appendChild(node)\n    }\n    return select(node)\n  }\n\n  // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n  function getScreenBBox(targetShape) {\n    var targetel   = target || targetShape\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode\n    }\n\n    var bbox       = {},\n        matrix     = targetel.getScreenCTM(),\n        tbbox      = targetel.getBBox(),\n        width      = tbbox.width,\n        height     = tbbox.height,\n        x          = tbbox.x,\n        y          = tbbox.y\n\n    point.x = x\n    point.y = y\n    bbox.nw = point.matrixTransform(matrix)\n    point.x += width\n    bbox.ne = point.matrixTransform(matrix)\n    point.y += height\n    bbox.se = point.matrixTransform(matrix)\n    point.x -= width\n    bbox.sw = point.matrixTransform(matrix)\n    point.y -= height / 2\n    bbox.w = point.matrixTransform(matrix)\n    point.x += width\n    bbox.e = point.matrixTransform(matrix)\n    point.x -= width / 2\n    point.y -= height / 2\n    bbox.n = point.matrixTransform(matrix)\n    point.y += height\n    bbox.s = point.matrixTransform(matrix)\n\n    return bbox\n  }\n\n  // Private - replace D3JS 3.X d3.functor() function\n  function functor(v) {\n    return typeof v === 'function' ? v : function() {\n      return v\n    }\n  }\n\n  return tip\n}\n","/* eslint-disable no-unused-vars */\nimport * as d3 from 'd3';\nimport _ from 'lodash';\n\n// main code for feature graphics\n// a reference to the default graphic container, change if needed\nconst container = d3.select('svg');\n\n// a helper function to clear the container of its contents\nconst clearContainer = () => container.html('');\n\n// a helper function to grab the container's width\nconst getFrameWidth = () => container.node().offsetWidth;\n\nimport data from '../../../data/data.json';\n// let pesutBpp = data['pesut_bpp'];\n\nfunction resize() {\n  // code executed on window resize\n  clearContainer();\n  const frameWidth = getFrameWidth();\n  var breakPoint = 400;\n  const isMobile = frameWidth < breakPoint;\n\n  //   var mapContainer = map.getCanvasContainer();\n  //   console.log(mapContainer);\n\n  var svg = d3.select('svg');\n\n  var image = svg\n    .append('image')\n    .attr('xlink:href', 'http://lorempixel.com/200/200/')\n    .attr('width', 200)\n    .attr('height', 200);\n\n  // .style(\"position\", \"absolute\")\n  // .style(\"z-index\", 2);\n\n  //   function project(d) {\n  //   return map.project(new mapboxgl.LngLat(d[\"LONG\"], d[\"LAT\"]));\n  // }\n  // //change LAT and LONG to whatever the lat long fields are\n\n  //   var dots = svg\n  //     .selectAll(\"circle\")\n  //     .data(pesutBpp)\n  //     .enter()\n  //     .append(\"circle\")\n  //     .attr(\"r\", 3)\n  //     .style(\"fill\", \"000000\")\n  //     .attr(\"cx\", function(d) {\n  //         return project(d).x;\n  //       })\n  //     .attr(\"cy\", function(d) {\n  //         return project(d).y;\n  //       });\n\n  // pass the recalculated frameWidth to parts of your chart (like an axis) that change with resize!\n}\n\n// call resize on load\nresize();\nwindow.addEventListener('resize', _.debounce(resize, 200));\n","import { h, render } from 'preact';\n\n// just in case this gets removed\nwindow.ttData = window.ttData || {};\n\n// related content\nconst relatedContentContainer = document.getElementById(\n  'related-content-container'\n);\n\nif (relatedContentContainer && window.ttData.gutenTag) {\n  import(\n    /* webpackChunkName: \"RelatedContent\" */ './components/RelatedContent'\n  ).then(({ default: RelatedContent }) =>\n    render(\n      <RelatedContent title={'Read more'} gutenTag={window.ttData.gutenTag} />,\n      relatedContentContainer\n    )\n  );\n}\n\n// trending ribbon\nconst ribbonContainer = document.getElementById('ribbon-container');\n\nif (ribbonContainer) {\n  import(\n    /* webpackChunkName: \"Ribbon\" */ './components/Ribbon'\n  ).then(({ default: Ribbon }) => render(<Ribbon />, ribbonContainer));\n}\n\n// ads\nimport(/* webpackChunkName: \"ads\" */ './utils/ad-loader').then(\n  ({ default: AdLoader }) => {\n    const ads = new AdLoader();\n    ads.init();\n  }\n);\n","/*\n * classList.js: Cross-browser full element.classList implementation.\n * 1.2.20171210\n *\n * By Eli Grey, http://eligrey.com\n * License: Dedicated to the public domain.\n *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\nif ('document' in self) {\n  // Full polyfill for browsers with no classList support\n  // Including IE < Edge missing SVGElement.classList\n  if (\n    !('classList' in document.createElement('_')) ||\n    (document.createElementNS &&\n      !(\n        'classList' in\n        document.createElementNS('http://www.w3.org/2000/svg', 'g')\n      ))\n  ) {\n    (function(view) {\n      'use strict';\n\n      if (!('Element' in view)) return;\n\n      var classListProp = 'classList',\n        protoProp = 'prototype',\n        elemCtrProto = view.Element[protoProp],\n        objCtr = Object,\n        strTrim =\n          String[protoProp].trim ||\n          function() {\n            return this.replace(/^\\s+|\\s+$/g, '');\n          },\n        arrIndexOf =\n          Array[protoProp].indexOf ||\n          function(item) {\n            var i = 0,\n              len = this.length;\n            for (; i < len; i++) {\n              if (i in this && this[i] === item) {\n                return i;\n              }\n            }\n            return -1;\n          },\n        // Vendors: please allow content code to instantiate DOMExceptions\n        DOMEx = function(type, message) {\n          this.name = type;\n          this.code = DOMException[type];\n          this.message = message;\n        },\n        checkTokenAndGetIndex = function(classList, token) {\n          if (token === '') {\n            throw new DOMEx('SYNTAX_ERR', 'The token must not be empty.');\n          }\n          if (/\\s/.test(token)) {\n            throw new DOMEx(\n              'INVALID_CHARACTER_ERR',\n              'The token must not contain space characters.'\n            );\n          }\n          return arrIndexOf.call(classList, token);\n        },\n        ClassList = function(elem) {\n          var trimmedClasses = strTrim.call(elem.getAttribute('class') || ''),\n            classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : [],\n            i = 0,\n            len = classes.length;\n          for (; i < len; i++) {\n            this.push(classes[i]);\n          }\n          this._updateClassName = function() {\n            elem.setAttribute('class', this.toString());\n          };\n        },\n        classListProto = (ClassList[protoProp] = []),\n        classListGetter = function() {\n          return new ClassList(this);\n        };\n      // Most DOMException implementations don't allow calling DOMException's toString()\n      // on non-DOMExceptions. Error's toString() is sufficient here.\n      DOMEx[protoProp] = Error[protoProp];\n      classListProto.item = function(i) {\n        return this[i] || null;\n      };\n      classListProto.contains = function(token) {\n        return ~checkTokenAndGetIndex(this, token + '');\n      };\n      classListProto.add = function() {\n        var tokens = arguments,\n          i = 0,\n          l = tokens.length,\n          token,\n          updated = false;\n        do {\n          token = tokens[i] + '';\n          if (!~checkTokenAndGetIndex(this, token)) {\n            this.push(token);\n            updated = true;\n          }\n        } while (++i < l);\n\n        if (updated) {\n          this._updateClassName();\n        }\n      };\n      classListProto.remove = function() {\n        var tokens = arguments,\n          i = 0,\n          l = tokens.length,\n          token,\n          updated = false,\n          index;\n        do {\n          token = tokens[i] + '';\n          index = checkTokenAndGetIndex(this, token);\n          while (~index) {\n            this.splice(index, 1);\n            updated = true;\n            index = checkTokenAndGetIndex(this, token);\n          }\n        } while (++i < l);\n\n        if (updated) {\n          this._updateClassName();\n        }\n      };\n      classListProto.toggle = function(token, force) {\n        var result = this.contains(token),\n          method = result\n            ? force !== true && 'remove'\n            : force !== false && 'add';\n\n        if (method) {\n          this[method](token);\n        }\n\n        if (force === true || force === false) {\n          return force;\n        } else {\n          return !result;\n        }\n      };\n      classListProto.replace = function(token, replacement_token) {\n        var index = checkTokenAndGetIndex(token + '');\n        if (~index) {\n          this.splice(index, 1, replacement_token);\n          this._updateClassName();\n        }\n      };\n      classListProto.toString = function() {\n        return this.join(' ');\n      };\n\n      if (objCtr.defineProperty) {\n        var classListPropDesc = {\n          get: classListGetter,\n          enumerable: true,\n          configurable: true,\n        };\n        try {\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        } catch (ex) {\n          // IE 8 doesn't support enumerable:true\n          // adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36\n          // modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected\n          if (ex.number === undefined || ex.number === -0x7ff5ec54) {\n            classListPropDesc.enumerable = false;\n            objCtr.defineProperty(\n              elemCtrProto,\n              classListProp,\n              classListPropDesc\n            );\n          }\n        }\n      } else if (objCtr[protoProp].__defineGetter__) {\n        elemCtrProto.__defineGetter__(classListProp, classListGetter);\n      }\n    })(self);\n  }\n\n  // There is full or partial native classList support, so just check if we need\n  // to normalize the add/remove and toggle APIs.\n\n  (function() {\n    'use strict';\n\n    var testElement = document.createElement('_');\n\n    testElement.classList.add('c1', 'c2');\n\n    // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n    // classList.remove exist but support only one argument at a time.\n    if (!testElement.classList.contains('c2')) {\n      var createMethod = function(method) {\n        var original = DOMTokenList.prototype[method];\n\n        DOMTokenList.prototype[method] = function(token) {\n          var i,\n            len = arguments.length;\n\n          for (i = 0; i < len; i++) {\n            token = arguments[i];\n            original.call(this, token);\n          }\n        };\n      };\n      createMethod('add');\n      createMethod('remove');\n    }\n\n    testElement.classList.toggle('c3', false);\n\n    // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n    // support the second argument.\n    if (testElement.classList.contains('c3')) {\n      var _toggle = DOMTokenList.prototype.toggle;\n\n      DOMTokenList.prototype.toggle = function(token, force) {\n        if (1 in arguments && !this.contains(token) === !force) {\n          return force;\n        } else {\n          return _toggle.call(this, token);\n        }\n      };\n    }\n\n    // replace() polyfill\n    if (!('replace' in document.createElement('_').classList)) {\n      DOMTokenList.prototype.replace = function(token, replacement_token) {\n        var tokens = this.toString().split(' '),\n          index = tokens.indexOf(token + '');\n        if (~index) {\n          tokens = tokens.slice(index);\n          this.remove.apply(this, tokens);\n          this.add(replacement_token);\n          this.add.apply(this, tokens.slice(1));\n        }\n      };\n    }\n\n    testElement = null;\n  })();\n}\n","'use strict';\n\nif (typeof Promise === 'undefined') {\n  window.Promise = require('promise-polyfill').default;\n}\n\n// Only polyfill fetch() if we're in a browser\nif (typeof window !== 'undefined') {\n  require('whatwg-fetch');\n}\n\n// Will use the native implementation if it's not bad\nObject.assign = require('object-assign');\n\n// Support for...of (a commonly used syntax feature that requires Symbols)\nrequire('core-js/es6/symbol');\n// support all of Map()\nrequire('core-js/es6/map');\n// support all of Set()\nrequire('core-js/es6/set');\n// Support iterable spread (...Set, ...Map)\nrequire('core-js/fn/array/from');\n\n// This is available locally because everyone who made one doesn't understand\n// npm, apparently\nrequire('./polyfills/classlist.js');\n\n// We depend on intersection-observer enough that it should just be assumed as necessary\nrequire('intersection-observer');\n","/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n","/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n","/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n","// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n","import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n"],"sourceRoot":""}